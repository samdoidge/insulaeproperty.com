{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/styles/constants.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","NotFoundPage","a","createElement","title","d","COLORS","BORDER_RADIUS","lightWhite","lightGray","mediumGray","gray","babyBlue","blue","orange","m","module","exports","require","default","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","array","arrayOf","Footer","siteTitle","react_default","style","padding","backgroundColor","display","alignItems","justifyContent","gridTemplateColumns","fontSize","color","fontWeight","textDecoration","href","Date","getFullYear","Layout","gatsby_browser_entry","Fragment","class","footer","_755544856","node"],"mappings":"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","file":"component---src-pages-404-js-4d9f038fecff7db5ac7e.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <h1>Page not Found :(</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","export const COLORS = {\n  lightWhite: \"#FBFDFF\",\n  lightGray: \"#F3F5F6\",\n  mediumGray: \"#B0B8BA\",\n  gray: \"#A0A4A6\",\n  babyBlue: \"#50CAF9\",\n  blue: \"#5368f1\",\n  orange: '#db7b45'\n}\n\nexport const GRADIENT = `linear-gradient(to top right, ${COLORS.babyBlue}, ${\n  COLORS.blue\n})`\n\nexport const BORDER_RADIUS = \"10px\"\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { COLORS } from \"../styles/constants\"\n\nconst Footer = ({ siteTitle }) => (\n  <footer\n    style={{\n      padding: \"1rem\",\n      backgroundColor: COLORS.lightGray,\n    }}\n  >\n    <div\n      style={{\n        display: \"grid\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 240px))\",\n        padding: \"1rem 1rem\",\n        fontSize: \".85rem\",\n      }}\n    >\n      <div style={{ color: COLORS.blue, fontWeight: 700 }}>\n        <a\n          style={{ textDecoration: \"none\", color: COLORS.orange }}\n          href=\"mailto:hello@insulaeproperty.com\"\n        >\n          Contact Us\n        </a>\n      </div>\n      <div style={{ color: COLORS.gray }}>\n        © {new Date().getFullYear()}\n        {` `}\n        {siteTitle}\n      </div>\n    </div>\n  </footer>\n)\n\nFooter.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFooter.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Footer\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Footer from \"./footer\"\nimport \"../styles/default.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div\n         class=\"site\"\n        >\n          <main class=\"site-content\">{children}</main>\n          <Footer siteTitle={data.site.siteMetadata.title} />\n        </div>\n       \n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}